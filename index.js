// Generated by CoffeeScript 1.6.2
(function() {
  var bitly, querystring, request,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  request = require('request');

  querystring = require('querystring');

  bitly = (function() {
    function bitly(username, password, callback) {
      this.get = __bind(this.get, this);
      var OAuthurl, headers, params,
        _this = this;

      headers = {
        'authorization': "Basic " + new Buffer(username + ":" + password).toString('base64')
      };
      OAuthurl = "https://api-ssl.bitly.com/oauth/access_token";
      params = {
        'url': OAuthurl,
        'headers': headers
      };
      request.post(params, function(error, response, body) {
        if (response.statusCode === 200) {
          _this.access_token = body;
          return callback();
        } else {
          return callback(body);
        }
      });
      this.url = 'https://api-ssl.bitly.com/v3/';
    }

    bitly.prototype.get = function(endpoint, parameters, callback) {
      var params;

      if (arguments.length === 2) {
        callback = parameters;
        parameters = {};
      }
      parameters.access_token = this.access_token;
      params = {
        'url': this.url + endpoint + '?' + querystring.stringify(parameters)
      };
      return request.get(params, function(error, response, body) {
        if (response.statusCode === 200) {
          return callback(error, JSON.parse(body));
        } else {
          return callback(JSON.parse(body, null));
        }
      });
    };

    return bitly;

  })();

  module.exports = bitly;

}).call(this);
